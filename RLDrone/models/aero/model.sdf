<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from intel_aero_base.xacro          | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="aero" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- =============================================================== -->
  <!-- ==================== ROS INTERFACE MACRO ====================== -->
  <!-- =============================================================== -->
  <!-- <xacro:macro
  		name="ros_interface_plugin_macro"
  		params="namespace">
    <gazebo>
      <plugin name="ros_interface_plugin" filename="librotors_gazebo_ros_interface_plugin.so">
        <robotNamespace>${namespace}</robotNamespace>
      </plugin>
    </gazebo>
  </xacro:macro>-->
  <link name="intel_aero/base_link"/>
  <joint name="intel_aero/base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="intel_aero/base_link"/>
    <child link="intel_aero/base_link_inertia"/>
  </joint>
  <link name="intel_aero/base_link_inertia">
    <inertial>
      <mass value="1.2"/>
      <!-- [kg] -->
      <origin xyz="0 0 0"/>
      <inertia ixx="0.027439184" ixy="0.0" ixz="0.0" iyy="0.036231237" iyz="0.0" izz="0.077131579"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="./meshes/intel_aero.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.285 0.285 0.195"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </collision>
  </link>
  <!-- attach multirotor_base_plugin to the base_link -->
  <!--<gazebo>
    <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="multirotor_base_plugin">
      <robotNamespace>intel_aero</robotNamespace>
      <linkName>intel_aero/base_link</linkName>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>-->
  <joint name="intel_aero/rotor_0_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.13081475452 -0.13081475452 0.02"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="intel_aero/base_link"/>
    <child link="intel_aero/rotor_0"/>
  </joint>
  <link name="intel_aero/rotor_0">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="2.5770823025e-07" ixy="0.0" ixz="0.0" iyy="1.40230777241e-05" iyz="0.0" izz="1.37867028186e-05"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="./meshes/intel_aero_propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.115"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <!--<gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="intel_aero_front_right_motor_model">
      <robotNamespace>intel_aero</robotNamespace>
      <jointName>intel_aero/rotor_0_joint</jointName>
      <linkName>intel_aero/rotor_0</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>2950</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.01</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>0</motorNumber>
      <rotorDragCoefficient>9.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/0</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>-->
  <gazebo reference="intel_aero/rotor_0">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="intel_aero/rotor_1_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.13081475452 0.13081475452 0.02"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="intel_aero/base_link"/>
    <child link="intel_aero/rotor_1"/>
  </joint>
  <link name="intel_aero/rotor_1">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="2.5770823025e-07" ixy="0.0" ixz="0.0" iyy="1.40230777241e-05" iyz="0.0" izz="1.37867028186e-05"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="./meshes/intel_aero_propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.115"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <!--<gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="intel_aero_back_left_motor_model">
      <robotNamespace>intel_aero</robotNamespace>
      <jointName>intel_aero/rotor_1_joint</jointName>
      <linkName>intel_aero/rotor_1</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>2950</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.01</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>1</motorNumber>
      <rotorDragCoefficient>9.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/1</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>-->
  <gazebo reference="intel_aero/rotor_1">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="intel_aero/rotor_2_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.13081475452 0.13081475452 0.02"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="intel_aero/base_link"/>
    <child link="intel_aero/rotor_2"/>
  </joint>
  <link name="intel_aero/rotor_2">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="2.5770823025e-07" ixy="0.0" ixz="0.0" iyy="1.40230777241e-05" iyz="0.0" izz="1.37867028186e-05"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="./meshes/intel_aero_propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.115"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <!--<gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="intel_aero_front_left_motor_model">
      <robotNamespace>intel_aero</robotNamespace>
      <jointName>intel_aero/rotor_2_joint</jointName>
      <linkName>intel_aero/rotor_2</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>2950</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.01</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>2</motorNumber>
      <rotorDragCoefficient>9.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/2</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>-->
  <gazebo reference="intel_aero/rotor_2">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="intel_aero/rotor_3_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.13081475452 -0.13081475452 0.02"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="intel_aero/base_link"/>
    <child link="intel_aero/rotor_3"/>
  </joint>
  <link name="intel_aero/rotor_3">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="2.5770823025e-07" ixy="0.0" ixz="0.0" iyy="1.40230777241e-05" iyz="0.0" izz="1.37867028186e-05"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="./meshes/intel_aero_propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.115"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <!--<gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="intel_aero_back_right_motor_model">
      <robotNamespace>intel_aero</robotNamespace>
      <jointName>intel_aero/rotor_3_joint</jointName>
      <linkName>intel_aero/rotor_3</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>2950</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.01</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>3</motorNumber>
      <rotorDragCoefficient>9.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/3</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>-->
  <gazebo reference="intel_aero/rotor_3">
    <material>Gazebo/Blue</material>
  </gazebo>
  <!--<gazebo>
    <plugin filename="librotors_gazebo_controller_interface.so" name="controller_interface">
      <robotNamespace>intel_aero</robotNamespace>
      <commandAttitudeThrustSubTopic>command/attitude</commandAttitudeThrustSubTopic>
      <commandRateThrustSubTopic>command/rate</commandRateThrustSubTopic>
      <commandMotorSpeedSubTopic>command/motor_speed</commandMotorSpeedSubTopic>
      <imuSubTopic>imu</imuSubTopic>
      <motorSpeedCommandPubTopic>gazebo/command/motor_speed</motorSpeedCommandPubTopic>
    </plugin>
  </gazebo>-->
  <!-- IMU link -->
  <link name="intel_aero/imu_link">
    <inertial>
      <inertia ixx="0.000001" ixy="0.0" ixz="0.0" iyy="0.000001" iyz="0.0" izz="0.000001"/>
      <mass value="0.03"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="intel_aero/imu_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.0 0 0.02"/>
    <parent link="intel_aero/base_link"/>
    <child link="intel_aero/imu_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <!--<gazebo>
    <plugin filename="librotors_gazebo_imu_plugin.so" name="rotors_gazebo_imu_plugin">
      [> A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics <]
      <robotNamespace>intel_aero</robotNamespace>
      [> (string, required): ros namespace in which the messages are published <]
      <linkName>intel_aero/imu_link</linkName>
      [> (string, required): name of the body which holds the IMU sensor <]
      <imuTopic>imu</imuTopic>
      [> (string): name of the sensor output topic and prefix of service names (defaults to imu) <]
      <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
      [> Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] <]
      <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
      [> Gyroscope bias random walk [rad/s/s/sqrt(Hz)] <]
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      [> Gyroscope bias correlation time constant [s] <]
      <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
      [> Gyroscope turn on bias standard deviation [rad/s] <]
      <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
      [> Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] <]
      <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
      [> Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] <]
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      [> Accelerometer bias correlation time constant [s] <]
      <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
      [> Accelerometer turn on bias standard deviation [m/s^2] <]
    </plugin>
  </gazebo>-->
  <link name="intel_aero/camera_mono_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.0085 0.0085 0.004"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="intel_aero/camera_mono_joint" type="fixed">
    <origin rpy="0 0 1.5707963268" xyz="0 0.115 -0.025"/>
    <parent link="intel_aero/base_link"/>
    <child link="intel_aero/camera_mono_link"/>
  </joint>
  <link name="intel_aero/camera_mono_optical_link"/>
  <joint name="intel_aero/camera_mono_optical_joint" type="fixed">
    <origin rpy="-1.5707963268 0 -1.5707963268" xyz="0 0 0"/>
    <parent link="intel_aero/camera_mono_link"/>
    <child link="intel_aero/camera_mono_optical_link"/>
  </joint>
  <gazebo reference="intel_aero/camera_mono_link">
    <sensor name="intel_aero_camera_mono" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>2</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>50</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <!--<plugin filename="libgazebo_ros_camera.so" name="intel_aero_camera_mono_controller">
        <robotNamespace>intel_aero</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera_mono</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_mono_link</frameName>
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <center>0.5 0.5</center>
      </plugin>-->
    </sensor>
  </gazebo>
  <link name="intel_aero/camera_optical_flow_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.0085 0.0085 0.004"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="intel_aero/camera_optical_flow_joint" type="fixed">
    <origin rpy="0 1.5707963268 0" xyz="0 0.075 -0.045"/>
    <parent link="intel_aero/base_link"/>
    <child link="intel_aero/camera_optical_flow_link"/>
  </joint>
  <link name="intel_aero/camera_optical_flow_optical_link"/>
  <joint name="intel_aero/camera_optical_flow_optical_joint" type="fixed">
    <origin rpy="-1.5707963268 0 -1.5707963268" xyz="0 0 0"/>
    <parent link="intel_aero/camera_optical_flow_link"/>
    <child link="intel_aero/camera_optical_flow_optical_link"/>
  </joint>
  <gazebo reference="intel_aero/camera_optical_flow_link">
    <sensor name="intel_aero_camera_optical_flow" type="camera">
      <update_rate>120.0</update_rate>
      <camera name="head">
        <horizontal_fov>2</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>L8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>50</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <!--<plugin filename="libgazebo_ros_camera.so" name="intel_aero_camera_optical_flow_controller">
        <robotNamespace>intel_aero</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>120.0</updateRate>
        <cameraName>camera_optical_flow</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_optical_flow_link</frameName>
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <center>0.5 0.5</center>
      </plugin>-->
    </sensor>
  </gazebo>
  <!-- Camera link -->
  <link name="stereors200_camera">
    <collision>
      <geometry>
        <box size="0.0078 0.130 0.0192"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.0615752"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="9.108e-05" ixy="0" ixz="0" iyy="2.51e-06" iyz="0" izz="8.931e-05"/>
    </inertial>
  </link>
  <!-- Connect camera to parent frame-->
  <joint name="stereorealsense_joint" type="fixed">
    <parent link="intel_aero/base_link"/>
    <child link="stereors200_camera"/>
    <origin rpy="0 0 1.5707963268" xyz="0 0.12 -0.01"/>
  </joint>
  <!-- Virtual links representing the cameras positons and orientations-->
  <link name="stereocolor"/>
  <link name="stereodepth"/>
  <link name="stereoired1"/>
  <link name="stereoired2"/>
  <!-- Joints positioning the virtual links with respect to the camera main link-->
  <joint name="stereocolor_joint" type="fixed">
    <parent link="stereors200_camera"/>
    <child link="stereocolor"/>
    <!-- <origin xyz="0 -0.046 0.004" rpy="0 0 0"/>  -->
    <!-- The default position is change since in Rviz the cloud depth axis is Z not X-->
    <origin rpy="1.5707963268 3.14159265359 1.5707963268" xyz="0 -0.046 0.004"/>
  </joint>
  <joint name="stereodepth_joint" type="fixed">
    <parent link="stereors200_camera"/>
    <child link="stereodepth"/>
    <origin rpy="0 0 0" xyz="0 -0.03 0.004"/>
  </joint>
  <joint name="stereoired1_joint" type="fixed">
    <parent link="stereors200_camera"/>
    <child link="stereoired1"/>
    <origin rpy="0 0 0" xyz="0 -0.06 0.004"/>
  </joint>
  <joint name="stereoired2_joint" type="fixed">
    <parent link="stereors200_camera"/>
    <child link="stereoired2"/>
    <origin rpy="0 0 0" xyz="0 0.01 0.004"/>
  </joint>
  <!-- **********************************************************-->
  <!-- GAZEBO DEFINITIONS ***************************************-->
  <!-- Load plugin to the model ("robot" in urdf format)-->
  <!--<gazebo>
    <plugin filename="librealsense_gazebo_plugin.so" name="realsense_plugin"/>
    [><pose frame="">0 0 0.015 0 0 0</pose><]
  </gazebo>-->
  <!-- Load parameters to model's main link-->
  <gazebo reference="stereors200_camera">
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <gravity>1</gravity>
    <!--<mu>1</mu>-->
    <mu2>1</mu2>
    <fdir1>0 0 0</fdir1>
    <!--<slip1>0</slip1>
        <slip2>0</slip2>-->
    <kp>1e+13</kp>
    <kd>1</kd>
    <!--<max_vel>0.01</max_vel>
        <min_depth>0</min_depth>-->
    <sensor name="color" type="camera">
      <pose frame="">0 -0.046 0.004 0 0 0</pose>
      <camera name="stereors200_camera">
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>60</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="ired1" type="camera">
      <pose frame="">0 -0.06 0.004 0 0 0</pose>
      <camera name="stereors200_camera">
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>60</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="ired2" type="camera">
      <pose frame="">0 0.01 0.004 0 0 0</pose>
      <camera name="stereors200_camera">
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>60</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="depth" type="depth">
      <pose frame="">0 -0.03 0.004 0 0 0</pose>
      <camera name="stereors200_camera">
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.100</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>60</update_rate>
      <visualize>0</visualize>
    </sensor>
  </gazebo>
  <!-- GPS link -->
  <link name="intel_aero/gps_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- GPS joint -->
  <joint name="intel_aero/gps_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="intel_aero/base_link"/>
    <child link="intel_aero/gps_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo reference="intel_aero/gps_link">
    <sensor name="intel_aero_gps" type="gps">
      <pose>0 0 0 0 0 0</pose>
      <visualize>0</visualize>
      <always_on>1</always_on>
      <update_rate>5</update_rate>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>3.0</stddev>
              <bias_mean>0.0</bias_mean>
              <bias_stddev>0.0</bias_stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>6.0</stddev>
              <bias_mean>0.0</bias_mean>
              <bias_stddev>0.0</bias_stddev>
            </noise>
          </vertical>
        </position_sensing>
        <velocity_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.1</stddev>
              <bias_mean>0.0</bias_mean>
              <bias_stddev>0.0</bias_stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.1</stddev>
              <bias_mean>0.0</bias_mean>
              <bias_stddev>0.0</bias_stddev>
            </noise>
          </vertical>
        </velocity_sensing>
      </gps>
      <!--<plugin filename="librotors_gazebo_gps_plugin.so" name="rotors_gazebo_gps_plugin">
        <robotNamespace>intel_aero</robotNamespace>
        [> (string, required): ros namespace in which the messages are published <]
        <linkName>intel_aero/gps_link</linkName>
        [> (string, required): name of the body which holds the GPS sensor <]
        <gpsTopic>gps</gpsTopic>
        [> (string): name of the sensor output topic and prefix of service names (defaults to 'gps') <]
        <groundSpeedTopic>ground_speed</groundSpeedTopic>
        [> (string): name of the ground speed output topic (defaults to 'ground_speed') <]
        <horPosStdDev>3.0</horPosStdDev>
        [> standard deviation for horizontal position noise [m] <]
        <verPosStdDev>6.0</verPosStdDev>
        [> standard deviation for vertical position noise [m] <]
        <horVelStdDev>0.1</horVelStdDev>
        [> standard deviation for horizontal speed noise [m/s] <]
        <verVelStdDev>0.1</verVelStdDev>
        [> standard deviation for vertical speed noise [m/s] <]
      </plugin>-->
    </sensor>
  </gazebo>
  <!-- IMU link -->
  <link name="intel_aero/imugt_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="intel_aero/imugt_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="intel_aero/base_link"/>
    <child link="intel_aero/imugt_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <!--<gazebo>
    <plugin filename="librotors_gazebo_imu_plugin.so" name="rotors_gazebo_imugt_plugin">
      [> A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics <]
      <robotNamespace>intel_aero</robotNamespace>
      [> (string, required): ros namespace in which the messages are published <]
      <linkName>intel_aero/imugt_link</linkName>
      [> (string, required): name of the body which holds the IMU sensor <]
      <imuTopic>ground_truth/imu</imuTopic>
      [> (string): name of the sensor output topic and prefix of service names (defaults to imu) <]
      <gyroscopeNoiseDensity>0.0</gyroscopeNoiseDensity>
      [> Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] <]
      <gyroscopeRandomWalk>0.0</gyroscopeRandomWalk>
      [> Gyroscope bias random walk [rad/s/s/sqrt(Hz)] <]
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      [> Gyroscope bias correlation time constant [s] <]
      <gyroscopeTurnOnBiasSigma>0.0</gyroscopeTurnOnBiasSigma>
      [> Gyroscope turn on bias standard deviation [rad/s] <]
      <accelerometerNoiseDensity>0.0</accelerometerNoiseDensity>
      [> Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] <]
      <accelerometerRandomWalk>0.0</accelerometerRandomWalk>
      [> Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] <]
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      [> Accelerometer bias correlation time constant [s] <]
      <accelerometerTurnOnBiasSigma>0.0</accelerometerTurnOnBiasSigma>
      [> Accelerometer turn on bias standard deviation [m/s^2] <]
    </plugin>
  </gazebo>-->
  <!-- odometry link -->
  <link name="intel_aero/odometry_sensorgt_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
    </inertial>
  </link>
  <!-- odometry joint -->
  <joint name="intel_aero/odometry_sensorgt_joint" type="revolute">
    <parent link="intel_aero/base_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    <child link="intel_aero/odometry_sensorgt_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <!--<gazebo>
    <plugin filename="librotors_gazebo_odometry_plugin.so" name="odometry_sensorgt">
      <linkName>intel_aero/odometry_sensorgt_link</linkName>
      <robotNamespace>intel_aero</robotNamespace>
      <poseTopic>ground_truth/pose</poseTopic>
      <poseWithCovarianceTopic>ground_truth/pose_with_covariance</poseWithCovarianceTopic>
      <positionTopic>ground_truth/position</positionTopic>
      <transformTopic>ground_truth/transform</transformTopic>
      <odometryTopic>ground_truth/odometry</odometryTopic>
      <parentFrameId>world</parentFrameId>
      [> Use the scoped link name here. e.g. Model::link. <]
      <childFrameId>intel_aero/base_link</childFrameId>
      <measurementDivisor>1</measurementDivisor>
      [> only every (seq % measurementDivisor) == 0 measurement is published [int] <]
      <measurementDelay>0</measurementDelay>
      [> time that measurement gets held back before it's published in [simulation cycles (int)] <]
      <unknownDelay>0.0</unknownDelay>
      [> additional delay, that just gets added to the timestamp [s] <]
      <noiseNormalPosition>0 0 0</noiseNormalPosition>
      [> standard deviation of additive white gaussian noise [m] <]
      <noiseNormalQuaternion>0 0 0</noiseNormalQuaternion>
      [> standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) <]
      <noiseNormalLinearVelocity>0 0 0</noiseNormalLinearVelocity>
      [> standard deviation of additive white gaussian noise [m/s] <]
      <noiseNormalAngularVelocity>0 0 0</noiseNormalAngularVelocity>
      [> standard deviation of additive white gaussian noise [rad/s] <]
      <noiseUniformPosition>0 0 0</noiseUniformPosition>
      [> symmetric bounds of uniform noise [m] <]
      <noiseUniformQuaternion>0 0 0</noiseUniformQuaternion>
      [> symmetric bounds of uniform noise [rad], computation see above <]
      <noiseUniformLinearVelocity>0 0 0</noiseUniformLinearVelocity>
      [> symmetric bounds of uniform noise [m/s] <]
      <noiseUniformAngularVelocity>0 0 0</noiseUniformAngularVelocity>
    </plugin>
  </gazebo>-->
  <gazebo>
    <plugin filename="libaero_control.so" name="aero_control"/>
  </gazebo>
</robot>
